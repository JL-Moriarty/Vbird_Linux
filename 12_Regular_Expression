## grep 的高级用法

grep [-A] -[B] [--color=auto] '查找字符串' filename

-A after的意思，后面加数字，表示除了找到的该行外，后续的n行也列出来
-B before的意思，后面加数字，表示除了找到的该行外，前面的n行也列出来

----------------------------------------------------------------------------------------------------------------------------------------------------------
## sed

语法：
  sed [-neft] [动作]

-n 使用安静模式。在一般sed的用法中，所有来自stdin的数据一般都会被列出来到屏幕上。如果加上-n参数后，则只有经过sed特殊处理的那一行（或者操作）才会被列出来
-e 直接在命令行模式上进行sed的动作编辑
-f 直接将sed的动作写到一个文件内，-f filename 则可执行filename内的sed 动作
-r sed的动作支持的是扩展型正则表达式的语法（默认是基础正则表达式语法）
-i 直接修改读取的文件内容，而不是由屏幕输出

动作说明：[n1, [n2]] function
n1, n2 不一定会存在，通常用于选择进行动作的行数

function 有下面这些参数：
a 新增，a的后面可接字符串，它们会在下一行出现
c 替换，c的后面可接字符串，它们会替换n1, n2之间的行，注意是整行替换
d 删除，通常不接任何参数
i 插入，i的后面可接字符串，它们会在上一行出现
p 打印，将某个选择的数据库打印出来
s 替换


----------------------------------------------------------------------------------------------------------------------------------------------------------
## 格式化打印：printf

语法：
   printf '打印格式' 实际内容

\a 警告声音输出
\b 退格键
\f 清屏
\n 新行
\r 回车
\t 水平制表符
\v 垂直制表符
\xNN NN为两位数的数字，可转换数字为字符

例如：
 printf '%s\t %s\t %s\t %s\t %s\t \n' $(cat printf.txt) 即把用cat printf.txt命令得到的结果用前面的格式输出，那个格式和C语言中的printf函数使用的格式是一样的

--------------------------------------------------------------------------------------------------------------------------------------------------------------

## awk 一个数据处理命令

awk命令把一行分割成多个字段，再分别对字段进行处理

语法：
  awk '条件类型1 {动作1} 条件类型2 {动作2} ' filename

例如：
 last -n 5 | awk '{printf $1 "\t" $3}'
                  这里的$1 表示第1个字段，$3表示第3个字段，而这些字段是由\t分割整行得来的。$0代表一整行

awk 内置变量：

NF  每一行拥有的字段总数
NR  目前awk所处理的是第几行数据
FS  目前的分隔字符，默认是空格


awk 的逻辑运算符：

>  大于
<  小于
>= 大于或等于
<= 小于或等于
== 等于
!= 不等于

----------------------------------------------------------------------------------------------------------------------------------------------------------


## 文本比较工具

1) diff 

用于比较文本文件。以行为单位。通常用于比较新旧版本
语法：
  diff [-bBi] from-file to-file

from-file  一个文件名，作为欲比较文件的文件名
to-file    一个文件名，作为目的比较文件的文件名

-b 忽略多个空白与一个空白的区别
-B 忽略空白行的区别
-i 忽略大小写的区别

2) cmp

用于比较二进制文件，以字节为单位
语法：
  cmp [-s] file1 file2

-s 将所有的不同点的字节处都列出来。因为cmp默认只输出第一个不同点

3) patch
这个命令用于在新旧文件之间进行更新与还原。可以用diff来把两个文件之间的不同给做成补丁文件，再用patch来进行更新或还原

更新命令：
 patch -pN < patch_file
还原命令：
 patch -R -pn < patch_file

-p 后面的N表示取消几层目录的意思
-R 代表还原，将新文件还源成原来的旧的版本

----------------------------------------------------------------------------------------------------------------------------------------------------------
## 文件打印准备 pr
